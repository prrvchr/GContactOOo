#ifndef __com_sun_star_sdbc_XRestProvider_idl__
#define __com_sun_star_sdbc_XRestProvider_idl__

#include <com/sun/star/uno/XInterface.idl>
#include <com/sun/star/auth/XRestKeyMap.idl>
#include <com/sun/star/container/XEnumeration.idl>
#include <com/sun/star/auth/RestRequestParameter.idl>
#include <com/sun/star/auth/XOAuth2Service.idl>
#include <com/sun/star/sdbc/XResultSet.idl>
#include <com/sun/star/sdbc/XConnection.idl>
#include <com/sun/star/beans/Optional.idl>
#include <com/sun/star/util/DateTime.idl>

module com { module sun { module star { module sdbc {

interface XRestProvider: com::sun::star::uno::XInterface
{

    boolean isOnLine();
    boolean isOffLine();

    ::com::sun::star::auth::RestRequestParameter getRequestParameter([in] string Method,
                                                                     [in] ::com::sun::star::auth::XRestKeyMap Data);

    any transcode([in] string Name,
                  [in] any Value);
    any transform([in] string Name,
                  [in] any Value);

    ::com::sun::star::beans::Optional<::com::sun::star::auth::XRestKeyMap> getUser([in] ::com::sun::star::uno::XInterface Request,
                                                                                   [in] string Name);
    string getUserId([in] ::com::sun::star::auth::XRestKeyMap User);
    string getItemId([in] ::com::sun::star::auth::XRestKeyMap Item);

    [attribute, readonly] string Host;
    [attribute, readonly] string BaseUrl;
    [attribute, readonly] ::com::sun::star::auth::XRestKeyMap PeopleFields;

};


}; }; }; };

#endif
